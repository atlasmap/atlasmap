<?xml version="1.0" encoding="UTF-8"?>

<!--

    Copyright (C) 2017 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.atlasmap</groupId>
    <artifactId>atlas-parent</artifactId>
    <version>2.6.0-SNAPSHOT</version>
    <relativePath>../parent</relativePath>
  </parent>

  <artifactId>atlas-docs</artifactId>
  <name>AtlasMap Documentation</name>
  <packaging>pom</packaging>

  <properties>
    <checkstyle.skip>true</checkstyle.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-service</artifactId>
    </dependency>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-java-service</artifactId>
    </dependency>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-json-service</artifactId>
    </dependency>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-xml-service</artifactId>
    </dependency>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-dfdl-service</artifactId>
    </dependency>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-dfdl-model</artifactId>
    </dependency>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-csv-service</artifactId>
    </dependency>
    <dependency>
      <groupId>io.atlasmap</groupId>
      <artifactId>atlas-csv-model</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <skipIfEmpty>true</skipIfEmpty>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>default-cli</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>openapi-core</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
            <configuration>
              <contextId>openapi-core</contextId>
              <outputFormat>JSON</outputFormat>
              <prettyPrint>true</prettyPrint>
              <outputPath>${project.build.directory}/generated-sources/openapi</outputPath>
              <outputFileName>atlasmap-api-core</outputFileName>
              <configurationFilePath>${project.build.outputDirectory}/openapi-configuration-core.yaml</configurationFilePath>
            </configuration>
          </execution>
          <execution>
            <id>openapi-java</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
            <configuration>
              <contextId>openapi-java</contextId>
              <outputFormat>JSON</outputFormat>
              <prettyPrint>true</prettyPrint>
              <outputPath>${project.build.directory}/generated-sources/openapi</outputPath>
              <outputFileName>atlasmap-api-java</outputFileName>
              <configurationFilePath>${project.build.outputDirectory}/openapi-configuration-java.yaml</configurationFilePath>
            </configuration>
          </execution>
          <execution>
            <id>openapi-json</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
            <configuration>
              <contextId>openapi-json</contextId>
              <outputFormat>JSON</outputFormat>
              <prettyPrint>true</prettyPrint>
              <outputPath>${project.build.directory}/generated-sources/openapi</outputPath>
              <outputFileName>atlasmap-api-json</outputFileName>
              <configurationFilePath>${project.build.outputDirectory}/openapi-configuration-json.yaml</configurationFilePath>
            </configuration>
          </execution>
          <execution>
            <id>openapi-xml</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
            <configuration>
              <contextId>openapi-xml</contextId>
              <outputFormat>JSON</outputFormat>
              <prettyPrint>true</prettyPrint>
              <outputPath>${project.build.directory}/generated-sources/openapi</outputPath>
              <outputFileName>atlasmap-api-xml</outputFileName>
              <configurationFilePath>${project.build.outputDirectory}/openapi-configuration-xml.yaml</configurationFilePath>
            </configuration>
          </execution>
          <execution>
            <id>openapi-dfdl</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
            <configuration>
              <contextId>openapi-dfdl</contextId>
              <outputFormat>JSON</outputFormat>
              <prettyPrint>true</prettyPrint>
              <outputPath>${project.build.directory}/generated-sources/openapi</outputPath>
              <outputFileName>atlasmap-api-dfdl</outputFileName>
              <configurationFilePath>${project.build.outputDirectory}/openapi-configuration-dfdl.yaml</configurationFilePath>
            </configuration>
          </execution>
          <execution>
            <id>openapi-csv</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
            <configuration>
              <contextId>openapi-csv</contextId>
              <outputFormat>JSON</outputFormat>
              <prettyPrint>true</prettyPrint>
              <outputPath>${project.build.directory}/generated-sources/openapi</outputPath>
              <outputFileName>atlasmap-api-csv</outputFileName>
              <configurationFilePath>${project.build.outputDirectory}/openapi-configuration-csv.yaml</configurationFilePath>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>openapi-asciidoc-core</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>asciidoc</generatorName>
              <inputSpec>${project.build.directory}/generated-sources/openapi/atlasmap-api-core.json</inputSpec>
              <output>${project.basedir}/src/main/asciidoc/developer-guide/openapi/core</output>
            </configuration>
          </execution>
          <execution>
            <id>openapi-asciidoc-java</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>asciidoc</generatorName>
              <inputSpec>${project.build.directory}/generated-sources/openapi/atlasmap-api-java.json</inputSpec>
              <output>${project.basedir}/src/main/asciidoc/developer-guide/openapi/java</output>
            </configuration>
          </execution>
          <execution>
            <id>openapi-asciidoc-json</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>asciidoc</generatorName>
              <inputSpec>${project.build.directory}/generated-sources/openapi/atlasmap-api-json.json</inputSpec>
              <output>${project.basedir}/src/main/asciidoc/developer-guide/openapi/json</output>
            </configuration>
          </execution>
          <execution>
            <id>openapi-asciidoc-xml</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>asciidoc</generatorName>
              <inputSpec>${project.build.directory}/generated-sources/openapi/atlasmap-api-xml.json</inputSpec>
              <output>${project.basedir}/src/main/asciidoc/developer-guide/openapi/xml</output>
            </configuration>
          </execution>
          <execution>
            <id>openapi-asciidoc-dfdl</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>asciidoc</generatorName>
              <inputSpec>${project.build.directory}/generated-sources/openapi/atlasmap-api-dfdl.json</inputSpec>
              <output>${project.basedir}/src/main/asciidoc/developer-guide/openapi/dfdl</output>
            </configuration>
          </execution>
          <execution>
            <id>openapi-asciidoc-csv</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>asciidoc</generatorName>
              <inputSpec>${project.build.directory}/generated-sources/openapi/atlasmap-api-csv.json</inputSpec>
              <output>${project.basedir}/src/main/asciidoc/developer-guide/openapi/csv</output>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- ==== HTML documentation ====================== -->
  <profiles>
    <profile>
      <id>html</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <executions>  
              <execution>
                <id>output-html-user-guide</id>
                <phase>package</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <sourceDirectory>src/main/asciidoc/user-guide</sourceDirectory>
                  <outputDirectory>${project.build.directory}/generated-docs/html/user-guide</outputDirectory>
                  <backend>html5</backend>
                  <doctype>book</doctype>
                  <preserveDirectories>true</preserveDirectories>
                  <sourceHighlighter>coderay</sourceHighlighter>
                  <attributes>
                    <imagesdir>images</imagesdir>
                    <toc>left</toc>
                    <linkcss>false</linkcss>
                  </attributes>
                </configuration>
              </execution>
              <execution>
                <id>output-html-developer-guide</id>
                <phase>package</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <sourceDirectory>src/main/asciidoc/developer-guide</sourceDirectory>
                  <outputDirectory>${project.build.directory}/generated-docs/html/developer-guide</outputDirectory>
                  <backend>html5</backend>
                  <doctype>book</doctype>
                  <preserveDirectories>true</preserveDirectories>
                  <sourceHighlighter>coderay</sourceHighlighter>
                  <attributes>
                    <imagesdir>images</imagesdir>
                    <toc>left</toc>
                    <linkcss>false</linkcss>
                  </attributes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>

    <!-- ==== PDF documentation ====================== -->

    <profile>
      <id>pdf</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>output-pdf-user-guide</id>
                <phase>package</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <sourceDirectory>src/main/asciidoc/user-guide</sourceDirectory>
                  <sourceDocumentName>index.adoc</sourceDocumentName>
                  <outputDirectory>${project.build.directory}/generated-docs/pdf/user-guide</outputDirectory>
                  <backend>pdf</backend>
                  <sourceHighlighter>rouge</sourceHighlighter>
                  <attributes>
                    <toc />
                  </attributes>
                </configuration>
              </execution>
              <execution>
                <id>output-pdf-developer-guide</id>
                <phase>package</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <sourceDirectory>src/main/asciidoc/developer-guide</sourceDirectory>
                  <sourceDocumentName>index.adoc</sourceDocumentName>
                  <outputDirectory>${project.build.directory}/generated-docs/pdf/developer-guide</outputDirectory>
                  <backend>pdf</backend>
                  <sourceHighlighter>rouge</sourceHighlighter>
                  <attributes>
                    <toc />
                  </attributes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
